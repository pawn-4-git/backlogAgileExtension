.estimated_time {
  margin-left: 5px;
  margin-right: 5px;
}

.punctuation {
  margin-left: 5px;
  margin-right: 5px;
}

.actual_time {
  margin-left: 5px;
  margin-right: 5px;
}

.accountFilterCloseButton {
  /* ボタンのスタイル設定 */
  padding: 10px 20px;
  /* パディング設定 */
  background-color: #4CAF50;
  /* 背景色 */
  color: white;
  /* 文字色 */
  border: none;
  /* 枠線なし */
  border-radius: 10px;
  /* 角丸設定 (10pxの半径で丸く) */
  cursor: pointer;
  /* カーソルをポインターに */
  font-size: 16px;
  /* フォントサイズ */
  margin: 20px auto;
  /* 上下に20px、左右autoで中央寄せ */
  display: block;
  /* ブロックレベル要素として扱い、widthが有効になる */
  width: 200px;
  /* 幅の指定 */
  transition: background 0.3s;
  /* 背景色の変化をアニメーション */
}

.accountFilterCloseButton:hover {
  background-color: #45a049;
  /* ホバー時の背景色 */
}

.accountListSelect {
  width: 200px;
}

.cardFilter {
  display: none;
}

.SlotBox>.overLimitDate {
  border: 5px solid red;
}

.SlotBox>.nearLimitDate {
  border: 5px solid yellow;
}


:root {
  --r: 100px;
}

.label {
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: calc(var(--r) * 0.3);
  color: green;
}

.label-1 {
  --start: 0;
  --end: 0.3;
  --percentage: calc((var(--start) + var(--end)) / 2);
  --angle: calc(var(--percentage) * 360deg);
  --deg: calc(-90deg + var(--angle));
  translate: calc(cos(var(--deg)) * var(--r) - 50%) calc(sin(var(--deg)) * var(--r) - 50%);
}

.label-2 {
  --start: 0.3;
  --end: 0.6;
  --percentage: calc((var(--start) + var(--end)) / 2);
  --angle: calc(var(--percentage) * 360deg);
  --deg: calc(-90deg + var(--angle));
  translate: calc(cos(var(--deg)) * var(--r) - 50%) calc(sin(var(--deg)) * var(--r) - 50%);
}

.label-3 {
  --start: 0.6;
  --end: 1;
  --percentage: calc((var(--start) + var(--end)) / 2);
  --angle: calc(var(--percentage) * 360deg);
  --deg: calc(-90deg + var(--angle));
  translate: calc(cos(var(--deg)) * var(--r) - 50%) calc(sin(var(--deg)) * var(--r) - 50%);
  color: white;
}

.categoryDialog {
  height: 320px;
  width: 700px;
}

.categoryDialogMini {
  height: 320px;
  width: 400px;
}

.taskViewDiv {
  height: 200px;
  width: 200px;
}

.circleClass {

  fill: none;
  stroke-width: 10;
  stroke-dasharray: 100;
  /* 最初は非表示状態 */
  stroke-dashoffset: 100;
}

.circleView {
  display: inline-block;
  transform-origin: center;
  transform: rotate(-90deg);
  height: 200px;
}

.taskDiscription {
  font-weight: bold;
}

.selectCategoryAlert {
  color: red;
}

/* チェックボックスのコンテナ */
.custom-checkbox {
  display: inline-block;
  position: relative;
  padding-left: 30px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 13px;
  user-select: none;
}

/* デフォルトのチェックボックスを非表示 */
.custom-checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* カスタムチェックマークのボックス */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: #ccc;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

/* チェックボックスが選択されていない時のホバー効果 */
.custom-checkbox:hover input[type="checkbox"]~.checkmark {
  background-color: #ddd;
}

/* チェックボックスが選択されている時のスタイル */
.custom-checkbox input[type="checkbox"]:checked~.checkmark {
  background-color: #4CAF50;
}

/* チェックマークの表示（選択時） */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* チェックボックスが選択された場合に表示されるチェックマーク */
.custom-checkbox input[type="checkbox"]:checked~.checkmark:after {
  display: block;
}

/* チェックマークのスタイル */
.custom-checkbox .checkmark:after {
  left: 7px;
  top: 3px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.container-title {
  font-size: 16px;
  font-weight: bold;
}

.find-estimate-actual-count {
  font-size: 15px;
  font-weight: bold;
}

#aiSummaryButton {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  padding: 10px 15px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  font-size: 14px;
}